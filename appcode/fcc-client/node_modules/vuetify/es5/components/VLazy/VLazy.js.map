{"version":3,"sources":["../../../src/components/VLazy/VLazy.ts"],"names":[],"mappings":";;;;;;;AACA;;AAGA;;AAGA;;AACA;;;;AARA;AAGA;AAGA;gBAOe,qBAAO,mBAAP,EAAmB,MAAnB,CAA0B;AACvC,EAAA,IAAI,EAAE,OADiC;AAGvC,EAAA,UAAU,EAAE;AAAE,IAAA,SAAS,EAAT;AAAF,GAH2B;AAKvC,EAAA,KAAK,EAAE;AACL,IAAA,SAAS,EAAE,CAAC,MAAD,EAAS,MAAT,CADN;AAEL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,MADC;AAEP;AACA;AACA,MAAA,OAAO,EAAE;AAAA,eAAO;AACd,UAAA,IAAI,EAAE,SADQ;AAEd,UAAA,UAAU,EAAE,SAFE;AAGd,UAAA,SAAS,EAAE;AAHG,SAAP;AAAA;AAJF,KAFJ;AAYL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,MADI;AAEV,MAAA,OAAO,EAAE;AAFC;AAZP,GALgC;AAuBvC,EAAA,QAAQ,EAAE;AACR,IAAA,MADQ,oBACF;AACJ,aAAO;AACL,QAAA,SAAS,EAAE,QAAQ,CAAC,KAAK,SAAN,CAAR,GAA2B,4BAAc,KAAK,SAAnB,CAA3B,GAA2D,KAAK;AADtE,OAAP;AAGD;AALO,GAvB6B;AA+BvC,EAAA,OAAO,EAAE;AACP,IAAA,UADO,wBACG;AACR,UAAM,IAAI,GAAG,sBAAQ,IAAR,CAAb;AAEA;;AACA,UAAI,CAAC,KAAK,UAAV,EAAsB,OAAO,IAAP;AAEtB,UAAM,QAAQ,GAAG,EAAjB;AAEA,UAAI,KAAK,QAAT,EAAmB,QAAQ,CAAC,IAAT,CAAc,IAAd;AAEnB,aAAO,KAAK,cAAL,CAAoB,YAApB,EAAkC;AACvC,QAAA,KAAK,EAAE;AAAE,UAAA,IAAI,EAAE,KAAK;AAAb;AADgC,OAAlC,EAEJ,QAFI,CAAP;AAGD,KAdM;AAeP,IAAA,SAfO,qBAgBL,OAhBK,EAiBL,QAjBK,EAkBL,cAlBK,EAkBkB;AAEvB,UAAI,KAAK,QAAT,EAAmB;AAEnB,WAAK,QAAL,GAAgB,cAAhB;AACD;AAvBM,GA/B8B;AAyDvC,EAAA,MAzDuC,kBAyD/B,CAzD+B,EAyD9B;AACP,WAAO,CAAC,CAAC,KAAD,EAAQ;AACd,MAAA,WAAW,EAAE,QADC;AAEd,MAAA,KAAK,EAAE,KAAK,MAFE;AAGd,MAAA,UAAU,EAAE,CAAC;AACX,QAAA,IAAI,EAAE,WADK;AAEX,QAAA,KAAK,EAAE;AACL,UAAA,OAAO,EAAE,KAAK,SADT;AAEL,UAAA,OAAO,EAAE,KAAK;AAFT;AAFI,OAAD,CAHE;AAUd,MAAA,EAAE,EAAE,KAAK,UAVK;AAWd,MAAA,KAAK,EAAE,KAAK;AAXE,KAAR,EAYL,CAAC,KAAK,UAAL,EAAD,CAZK,CAAR;AAaD;AAvEsC,CAA1B,C","sourcesContent":["// Mixins\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { convertToUnit, getSlot } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(Toggleable).extend({\n  name: 'VLazy',\n\n  directives: { intersect },\n\n  props: {\n    minHeight: [Number, String],\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    },\n    transition: {\n      type: String,\n      default: 'fade-transition',\n    },\n  },\n\n  computed: {\n    styles (): object {\n      return {\n        minHeight: parseInt(this.minHeight) ? convertToUnit(this.minHeight) : this.minHeight,\n      }\n    },\n  },\n\n  methods: {\n    genContent () {\n      const slot = getSlot(this)\n\n      /* istanbul ignore if */\n      if (!this.transition) return slot\n\n      const children = []\n\n      if (this.isActive) children.push(slot)\n\n      return this.$createElement('transition', {\n        props: { name: this.transition },\n      }, children)\n    },\n    onObserve (\n      entries: IntersectionObserverEntry[],\n      observer: IntersectionObserver,\n      isIntersecting: boolean,\n    ) {\n      if (this.isActive) return\n\n      this.isActive = isIntersecting\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-lazy',\n      attrs: this.$attrs,\n      directives: [{\n        name: 'intersect',\n        value: {\n          handler: this.onObserve,\n          options: this.options,\n        },\n      }],\n      on: this.$listeners,\n      style: this.styles,\n    }, [this.genContent()])\n  },\n})\n"],"sourceRoot":"","file":"VLazy.js"}